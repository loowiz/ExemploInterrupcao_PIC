

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jun 29 11:41:57 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           ; Version 2.10
    28                           ; Generated 31/07/2019 GMT
    29                           ; 
    30                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4550 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62                           	psect	idataCOMRAM
    63  000D74                     __pidataCOMRAM:
    64                           	opt callstack 0
    65                           
    66                           ;initializer for IniciaLCD@F3175
    67  000D74  33                 	db	51
    68  000D75  32                 	db	50
    69  000D76  28                 	db	40
    70  000D77  0C                 	db	12
    71  000D78  06                 	db	6
    72  000D79  01                 	db	1
    73  0000                     _TRISB	set	3987
    74  0000                     _INTCONbits	set	4082
    75  0000                     _RCONbits	set	4048
    76  0000                     _INTCON2bits	set	4081
    77  0000                     _TRISBbits	set	3987
    78  0000                     _PORTBbits	set	3969
    79  0000                     _PORTB	set	3969
    80                           
    81                           	psect	smallconst
    82  000800                     __psmallconst:
    83                           	opt callstack 0
    84  000800  00                 	db	0
    85  000801                     STR_2:
    86  000801  49                 	db	73	;'I'
    87  000802  4E                 	db	78	;'N'
    88  000803  54                 	db	84	;'T'
    89  000804  30                 	db	48	;'0'
    90  000805  3A                 	db	58	;':'
    91  000806  20                 	db	32
    92  000807  20                 	db	32
    93  000808  20                 	db	32
    94  000809  20                 	db	32
    95  00080A  20                 	db	32
    96  00080B  20                 	db	32
    97  00080C  20                 	db	32
    98  00080D  20                 	db	32
    99  00080E  20                 	db	32
   100  00080F  20                 	db	32
   101  000810  20                 	db	32
   102  000811  00                 	db	0
   103  000812                     STR_1:
   104  000812  20                 	db	32
   105  000813  20                 	db	32
   106  000814  20                 	db	32
   107  000815  53                 	db	83	;'S'
   108  000816  45                 	db	69	;'E'
   109  000817  4E                 	db	78	;'N'
   110  000818  41                 	db	65	;'A'
   111  000819  49                 	db	73	;'I'
   112  00081A  20                 	db	32
   113  00081B  20                 	db	32
   114  00081C  31                 	db	49	;'1'
   115  00081D  31                 	db	49	;'1'
   116  00081E  38                 	db	56	;'8'
   117  00081F  20                 	db	32
   118  000820  20                 	db	32
   119  000821  20                 	db	32
   120  000822  00                 	db	0
   121                           
   122                           ; #config settings
   123  000823  00                 	db	0	; dummy byte at the end
   124  0000                     
   125                           	psect	cinit
   126  000D42                     __pcinit:
   127                           	opt callstack 0
   128  000D42                     start_initialization:
   129                           	opt callstack 0
   130  000D42                     __initialization:
   131                           	opt callstack 0
   132                           
   133                           ; Initialize objects allocated to COMRAM (6 bytes)
   134                           ; load TBLPTR registers with __pidataCOMRAM
   135  000D42  0E74               	movlw	low __pidataCOMRAM
   136  000D44  6EF6               	movwf	tblptrl,c
   137  000D46  0E0D               	movlw	high __pidataCOMRAM
   138  000D48  6EF7               	movwf	tblptrh,c
   139  000D4A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   140  000D4C  6EF8               	movwf	tblptru,c
   141  000D4E  EE00  F012         	lfsr	0,__pdataCOMRAM
   142  000D52  EE10 F006          	lfsr	1,6
   143  000D56                     copy_data0:
   144  000D56  0009               	tblrd		*+
   145  000D58  CFF5 FFEE          	movff	tablat,postinc0
   146  000D5C  50E5               	movf	postdec1,w,c
   147  000D5E  50E1               	movf	fsr1l,w,c
   148  000D60  E1FA               	bnz	copy_data0
   149                           
   150                           ; Clear objects allocated to COMRAM (2 bytes)
   151  000D62  6A19               	clrf	(__pbssCOMRAM+1)& (0+255),c
   152  000D64  6A18               	clrf	__pbssCOMRAM& (0+255),c
   153  000D66                     end_of_initialization:
   154                           	opt callstack 0
   155  000D66                     __end_of__initialization:
   156                           	opt callstack 0
   157  000D66  901A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   158  000D68  921A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   159  000D6A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   160  000D6C  6EF8               	movwf	tblptru,c
   161  000D6E  0100               	movlb	0
   162  000D70  EF12  F004         	goto	_main	;jump to C main() function
   163                           
   164                           	psect	bssCOMRAM
   165  000018                     __pbssCOMRAM:
   166                           	opt callstack 0
   167  000018                     _Conta:
   168                           	opt callstack 0
   169  000018                     	ds	2
   170                           
   171                           	psect	dataCOMRAM
   172  000012                     __pdataCOMRAM:
   173                           	opt callstack 0
   174  000012                     IniciaLCD@F3175:
   175                           	opt callstack 0
   176  000012                     	ds	6
   177                           
   178                           	psect	cstackCOMRAM
   179  000001                     __pcstackCOMRAM:
   180                           	opt callstack 0
   181  000001                     i2IntExterna@opcao:
   182                           	opt callstack 0
   183                           
   184                           ; 2 bytes @ 0x0
   185  000001                     	ds	2
   186  000003                     ??_high_isr:
   187  000003                     
   188                           ; 1 bytes @ 0x2
   189  000003                     	ds	1
   190  000004                     ??_ComandoLCD:
   191  000004                     ??_EscreveLCD:
   192  000004                     ?___awdiv:
   193                           	opt callstack 0
   194  000004                     IntExterna@opcao:
   195                           	opt callstack 0
   196  000004                     ___awdiv@dividend:
   197                           	opt callstack 0
   198                           
   199                           ; 2 bytes @ 0x3
   200  000004                     	ds	1
   201  000005                     ComandoLCD@i:
   202                           	opt callstack 0
   203  000005                     EscreveLCD@dado:
   204                           	opt callstack 0
   205                           
   206                           ; 1 bytes @ 0x4
   207  000005                     	ds	1
   208  000006                     ComandoLCD@dado:
   209                           	opt callstack 0
   210  000006                     EscreveLCD@i:
   211                           	opt callstack 0
   212  000006                     ___awdiv@divisor:
   213                           	opt callstack 0
   214                           
   215                           ; 2 bytes @ 0x5
   216  000006                     	ds	1
   217  000007                     ??_IniciaLCD:
   218  000007                     PosicionaLCD@coluna:
   219                           	opt callstack 0
   220  000007                     StringLCD@string:
   221                           	opt callstack 0
   222                           
   223                           ; 2 bytes @ 0x6
   224  000007                     	ds	1
   225  000008                     ??_PosicionaLCD:
   226  000008                     ___awdiv@counter:
   227                           	opt callstack 0
   228  000008                     IniciaLCD@inicio:
   229                           	opt callstack 0
   230                           
   231                           ; 6 bytes @ 0x7
   232  000008                     	ds	1
   233  000009                     ___awdiv@sign:
   234                           	opt callstack 0
   235                           
   236                           ; 1 bytes @ 0x8
   237  000009                     	ds	1
   238  00000A                     PosicionaLCD@linha:
   239                           	opt callstack 0
   240  00000A                     ___awdiv@quotient:
   241                           	opt callstack 0
   242                           
   243                           ; 2 bytes @ 0x9
   244  00000A                     	ds	1
   245  00000B                     PosicionaLCD@posicao:
   246                           	opt callstack 0
   247                           
   248                           ; 1 bytes @ 0xA
   249  00000B                     	ds	1
   250  00000C                     ?___awmod:
   251                           	opt callstack 0
   252  00000C                     ___awmod@dividend:
   253                           	opt callstack 0
   254                           
   255                           ; 2 bytes @ 0xB
   256  00000C                     	ds	2
   257  00000E                     IniciaLCD@i:
   258                           	opt callstack 0
   259  00000E                     ___awmod@divisor:
   260                           	opt callstack 0
   261                           
   262                           ; 2 bytes @ 0xD
   263  00000E                     	ds	2
   264  000010                     ___awmod@counter:
   265                           	opt callstack 0
   266                           
   267                           ; 1 bytes @ 0xF
   268  000010                     	ds	1
   269  000011                     ___awmod@sign:
   270                           	opt callstack 0
   271                           
   272                           ; 1 bytes @ 0x10
   273  000011                     	ds	1
   274  000012                     
   275                           ; 1 bytes @ 0x11
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 78 in file "main.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;		None
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   295 ;;      Params:         0       0       0       0       0       0       0       0       0
   296 ;;      Locals:         0       0       0       0       0       0       0       0       0
   297 ;;      Temps:          0       0       0       0       0       0       0       0       0
   298 ;;      Totals:         0       0       0       0       0       0       0       0       0
   299 ;;Total ram usage:        0 bytes
   300 ;; Hardware stack levels required when called:    4
   301 ;; This function calls:
   302 ;;		_EscreveLCD
   303 ;;		_IniciaLCD
   304 ;;		_IntExterna
   305 ;;		_PosicionaLCD
   306 ;;		_StringLCD
   307 ;;		___awdiv
   308 ;;		___awmod
   309 ;; This function is called by:
   310 ;;		Startup code after reset
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           	psect	text0
   315  000824                     __ptext0:
   316                           	opt callstack 0
   317  000824                     _main:
   318                           	opt callstack 27
   319  000824                     
   320                           ;main.c: 82:  TRISB = 0b00000011;
   321  000824  0E03               	movlw	3
   322  000826  6E93               	movwf	147,c	;volatile
   323  000828                     
   324                           ;main.c: 83:  IniciaLCD();
   325  000828  EC22  F006         	call	_IniciaLCD	;wreg free
   326  00082C                     
   327                           ;main.c: 84:  IntExterna(1);
   328  00082C  0E00               	movlw	0
   329  00082E  6E05               	movwf	(IntExterna@opcao+1)^0,c
   330  000830  0E01               	movlw	1
   331  000832  6E04               	movwf	IntExterna@opcao^0,c
   332  000834  EC4C  F006         	call	_IntExterna	;wreg free
   333  000838                     
   334                           ;main.c: 90:  PosicionaLCD(1,1);
   335  000838  0E01               	movlw	1
   336  00083A  6E07               	movwf	PosicionaLCD@coluna^0,c
   337  00083C  0E01               	movlw	1
   338  00083E  ECBA  F005         	call	_PosicionaLCD
   339  000842                     
   340                           ;main.c: 91:     StringLCD("   SENAI  118   ");
   341  000842  0E12               	movlw	low STR_1
   342  000844  6E07               	movwf	StringLCD@string^0,c
   343  000846  0E08               	movlw	high STR_1
   344  000848  6E08               	movwf	(StringLCD@string+1)^0,c
   345  00084A  EC86  F006         	call	_StringLCD	;wreg free
   346  00084E                     
   347                           ;main.c: 92:  PosicionaLCD(2,1);
   348  00084E  0E01               	movlw	1
   349  000850  6E07               	movwf	PosicionaLCD@coluna^0,c
   350  000852  0E02               	movlw	2
   351  000854  ECBA  F005         	call	_PosicionaLCD
   352  000858                     
   353                           ;main.c: 93:     StringLCD("INT0:           ");
   354  000858  0E01               	movlw	low STR_2
   355  00085A  6E07               	movwf	StringLCD@string^0,c
   356  00085C  0E08               	movlw	high STR_2
   357  00085E  6E08               	movwf	(StringLCD@string+1)^0,c
   358  000860  EC86  F006         	call	_StringLCD	;wreg free
   359  000864                     l1202:
   360                           
   361                           ;main.c: 96:         PosicionaLCD(2,7);
   362  000864  0E07               	movlw	7
   363  000866  6E07               	movwf	PosicionaLCD@coluna^0,c
   364  000868  0E02               	movlw	2
   365  00086A  ECBA  F005         	call	_PosicionaLCD
   366  00086E                     
   367                           ;main.c: 97:         EscreveLCD((Conta/100)%10 + 48);
   368  00086E  0E00               	movlw	0
   369  000870  6E07               	movwf	(___awdiv@divisor+1)^0,c
   370  000872  0E64               	movlw	100
   371  000874  6E06               	movwf	___awdiv@divisor^0,c
   372  000876  C018  F004         	movff	_Conta,___awdiv@dividend
   373  00087A  C019  F005         	movff	_Conta+1,___awdiv@dividend+1
   374  00087E  EC79  F004         	call	___awdiv	;wreg free
   375  000882  C004  F00C         	movff	?___awdiv,___awmod@dividend
   376  000886  C005  F00D         	movff	?___awdiv+1,___awmod@dividend+1
   377  00088A  0E00               	movlw	0
   378  00088C  6E0F               	movwf	(___awmod@divisor+1)^0,c
   379  00088E  0E0A               	movlw	10
   380  000890  6E0E               	movwf	___awmod@divisor^0,c
   381  000892  ECDB  F004         	call	___awmod	;wreg free
   382  000896  500C               	movf	?___awmod^0,w,c
   383  000898  0F30               	addlw	48
   384  00089A  ECF3  F005         	call	_EscreveLCD
   385  00089E                     
   386                           ;main.c: 98:         EscreveLCD((Conta/10)%10 + 48);
   387  00089E  0E00               	movlw	0
   388  0008A0  6E07               	movwf	(___awdiv@divisor+1)^0,c
   389  0008A2  0E0A               	movlw	10
   390  0008A4  6E06               	movwf	___awdiv@divisor^0,c
   391  0008A6  C018  F004         	movff	_Conta,___awdiv@dividend
   392  0008AA  C019  F005         	movff	_Conta+1,___awdiv@dividend+1
   393  0008AE  EC79  F004         	call	___awdiv	;wreg free
   394  0008B2  C004  F00C         	movff	?___awdiv,___awmod@dividend
   395  0008B6  C005  F00D         	movff	?___awdiv+1,___awmod@dividend+1
   396  0008BA  0E00               	movlw	0
   397  0008BC  6E0F               	movwf	(___awmod@divisor+1)^0,c
   398  0008BE  0E0A               	movlw	10
   399  0008C0  6E0E               	movwf	___awmod@divisor^0,c
   400  0008C2  ECDB  F004         	call	___awmod	;wreg free
   401  0008C6  500C               	movf	?___awmod^0,w,c
   402  0008C8  0F30               	addlw	48
   403  0008CA  ECF3  F005         	call	_EscreveLCD
   404  0008CE                     
   405                           ;main.c: 99:         EscreveLCD(Conta%10 + 48);
   406  0008CE  C018  F00C         	movff	_Conta,___awmod@dividend
   407  0008D2  C019  F00D         	movff	_Conta+1,___awmod@dividend+1
   408  0008D6  0E00               	movlw	0
   409  0008D8  6E0F               	movwf	(___awmod@divisor+1)^0,c
   410  0008DA  0E0A               	movlw	10
   411  0008DC  6E0E               	movwf	___awmod@divisor^0,c
   412  0008DE  ECDB  F004         	call	___awmod	;wreg free
   413  0008E2  500C               	movf	?___awmod^0,w,c
   414  0008E4  0F30               	addlw	48
   415  0008E6  ECF3  F005         	call	_EscreveLCD
   416  0008EA  EF32  F004         	goto	l1202
   417  0008EE  EF07  F000         	goto	start
   418  0008F2                     __end_of_main:
   419                           	opt callstack 0
   420                           
   421 ;; *************** function ___awmod *****************
   422 ;; Defined at:
   423 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;  dividend        2   11[COMRAM] int 
   426 ;;  divisor         2   13[COMRAM] int 
   427 ;; Auto vars:     Size  Location     Type
   428 ;;  sign            1   16[COMRAM] unsigned char 
   429 ;;  counter         1   15[COMRAM] unsigned char 
   430 ;; Return value:  Size  Location     Type
   431 ;;                  2   11[COMRAM] int 
   432 ;; Registers used:
   433 ;;		wreg, status,2, status,0
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   439 ;;      Params:         4       0       0       0       0       0       0       0       0
   440 ;;      Locals:         2       0       0       0       0       0       0       0       0
   441 ;;      Temps:          0       0       0       0       0       0       0       0       0
   442 ;;      Totals:         6       0       0       0       0       0       0       0       0
   443 ;;Total ram usage:        6 bytes
   444 ;; Hardware stack levels used:    1
   445 ;; Hardware stack levels required when called:    2
   446 ;; This function calls:
   447 ;;		Nothing
   448 ;; This function is called by:
   449 ;;		_main
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           	psect	text1
   454  0009B6                     __ptext1:
   455                           	opt callstack 0
   456  0009B6                     ___awmod:
   457                           	opt callstack 28
   458  0009B6  0E00               	movlw	0
   459  0009B8  6E11               	movwf	___awmod@sign^0,c
   460  0009BA  BE0D               	btfsc	(___awmod@dividend+1)^0,7,c
   461  0009BC  EFE4  F004         	goto	u420
   462  0009C0  EFE2  F004         	goto	u421
   463  0009C4                     u421:
   464  0009C4  EFEA  F004         	goto	l1134
   465  0009C8                     u420:
   466  0009C8  6C0C               	negf	___awmod@dividend^0,c
   467  0009CA  1E0D               	comf	(___awmod@dividend+1)^0,f,c
   468  0009CC  B0D8               	btfsc	status,0,c
   469  0009CE  2A0D               	incf	(___awmod@dividend+1)^0,f,c
   470  0009D0  0E01               	movlw	1
   471  0009D2  6E11               	movwf	___awmod@sign^0,c
   472  0009D4                     l1134:
   473  0009D4  BE0F               	btfsc	(___awmod@divisor+1)^0,7,c
   474  0009D6  EFF1  F004         	goto	u430
   475  0009DA  EFEF  F004         	goto	u431
   476  0009DE                     u431:
   477  0009DE  EFF5  F004         	goto	l1138
   478  0009E2                     u430:
   479  0009E2  6C0E               	negf	___awmod@divisor^0,c
   480  0009E4  1E0F               	comf	(___awmod@divisor+1)^0,f,c
   481  0009E6  B0D8               	btfsc	status,0,c
   482  0009E8  2A0F               	incf	(___awmod@divisor+1)^0,f,c
   483  0009EA                     l1138:
   484  0009EA  500E               	movf	___awmod@divisor^0,w,c
   485  0009EC  100F               	iorwf	(___awmod@divisor+1)^0,w,c
   486  0009EE  B4D8               	btfsc	status,2,c
   487  0009F0  EFFC  F004         	goto	u441
   488  0009F4  EFFE  F004         	goto	u440
   489  0009F8                     u441:
   490  0009F8  EF22  F005         	goto	l1154
   491  0009FC                     u440:
   492  0009FC  0E01               	movlw	1
   493  0009FE  6E10               	movwf	___awmod@counter^0,c
   494  000A00  EF06  F005         	goto	l1144
   495  000A04                     l1142:
   496  000A04  90D8               	bcf	status,0,c
   497  000A06  360E               	rlcf	___awmod@divisor^0,f,c
   498  000A08  360F               	rlcf	(___awmod@divisor+1)^0,f,c
   499  000A0A  2A10               	incf	___awmod@counter^0,f,c
   500  000A0C                     l1144:
   501  000A0C  AE0F               	btfss	(___awmod@divisor+1)^0,7,c
   502  000A0E  EF0B  F005         	goto	u451
   503  000A12  EF0D  F005         	goto	u450
   504  000A16                     u451:
   505  000A16  EF02  F005         	goto	l1142
   506  000A1A                     u450:
   507  000A1A                     l1146:
   508  000A1A  500E               	movf	___awmod@divisor^0,w,c
   509  000A1C  5C0C               	subwf	___awmod@dividend^0,w,c
   510  000A1E  500F               	movf	(___awmod@divisor+1)^0,w,c
   511  000A20  580D               	subwfb	(___awmod@dividend+1)^0,w,c
   512  000A22  A0D8               	btfss	status,0,c
   513  000A24  EF16  F005         	goto	u461
   514  000A28  EF18  F005         	goto	u460
   515  000A2C                     u461:
   516  000A2C  EF1C  F005         	goto	l1150
   517  000A30                     u460:
   518  000A30  500E               	movf	___awmod@divisor^0,w,c
   519  000A32  5E0C               	subwf	___awmod@dividend^0,f,c
   520  000A34  500F               	movf	(___awmod@divisor+1)^0,w,c
   521  000A36  5A0D               	subwfb	(___awmod@dividend+1)^0,f,c
   522  000A38                     l1150:
   523  000A38  90D8               	bcf	status,0,c
   524  000A3A  320F               	rrcf	(___awmod@divisor+1)^0,f,c
   525  000A3C  320E               	rrcf	___awmod@divisor^0,f,c
   526  000A3E  2E10               	decfsz	___awmod@counter^0,f,c
   527  000A40  EF0D  F005         	goto	l1146
   528  000A44                     l1154:
   529  000A44  5011               	movf	___awmod@sign^0,w,c
   530  000A46  B4D8               	btfsc	status,2,c
   531  000A48  EF28  F005         	goto	u471
   532  000A4C  EF2A  F005         	goto	u470
   533  000A50                     u471:
   534  000A50  EF2E  F005         	goto	l1158
   535  000A54                     u470:
   536  000A54  6C0C               	negf	___awmod@dividend^0,c
   537  000A56  1E0D               	comf	(___awmod@dividend+1)^0,f,c
   538  000A58  B0D8               	btfsc	status,0,c
   539  000A5A  2A0D               	incf	(___awmod@dividend+1)^0,f,c
   540  000A5C                     l1158:
   541  000A5C  C00C  F00C         	movff	___awmod@dividend,?___awmod
   542  000A60  C00D  F00D         	movff	___awmod@dividend+1,?___awmod+1
   543  000A64  0012               	return		;funcret
   544  000A66                     __end_of___awmod:
   545                           	opt callstack 0
   546                           
   547 ;; *************** function ___awdiv *****************
   548 ;; Defined at:
   549 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;  dividend        2    3[COMRAM] int 
   552 ;;  divisor         2    5[COMRAM] int 
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  quotient        2    9[COMRAM] int 
   555 ;;  sign            1    8[COMRAM] unsigned char 
   556 ;;  counter         1    7[COMRAM] unsigned char 
   557 ;; Return value:  Size  Location     Type
   558 ;;                  2    3[COMRAM] int 
   559 ;; Registers used:
   560 ;;		wreg, status,2, status,0
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   566 ;;      Params:         4       0       0       0       0       0       0       0       0
   567 ;;      Locals:         4       0       0       0       0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0       0       0       0       0
   569 ;;      Totals:         8       0       0       0       0       0       0       0       0
   570 ;;Total ram usage:        8 bytes
   571 ;; Hardware stack levels used:    1
   572 ;; Hardware stack levels required when called:    2
   573 ;; This function calls:
   574 ;;		Nothing
   575 ;; This function is called by:
   576 ;;		_main
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text2
   581  0008F2                     __ptext2:
   582                           	opt callstack 0
   583  0008F2                     ___awdiv:
   584                           	opt callstack 28
   585  0008F2  0E00               	movlw	0
   586  0008F4  6E09               	movwf	___awdiv@sign^0,c
   587  0008F6  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
   588  0008F8  EF82  F004         	goto	u360
   589  0008FC  EF80  F004         	goto	u361
   590  000900                     u361:
   591  000900  EF88  F004         	goto	l1090
   592  000904                     u360:
   593  000904  6C06               	negf	___awdiv@divisor^0,c
   594  000906  1E07               	comf	(___awdiv@divisor+1)^0,f,c
   595  000908  B0D8               	btfsc	status,0,c
   596  00090A  2A07               	incf	(___awdiv@divisor+1)^0,f,c
   597  00090C  0E01               	movlw	1
   598  00090E  6E09               	movwf	___awdiv@sign^0,c
   599  000910                     l1090:
   600  000910  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
   601  000912  EF8F  F004         	goto	u370
   602  000916  EF8D  F004         	goto	u371
   603  00091A                     u371:
   604  00091A  EF95  F004         	goto	l1096
   605  00091E                     u370:
   606  00091E  6C04               	negf	___awdiv@dividend^0,c
   607  000920  1E05               	comf	(___awdiv@dividend+1)^0,f,c
   608  000922  B0D8               	btfsc	status,0,c
   609  000924  2A05               	incf	(___awdiv@dividend+1)^0,f,c
   610  000926  0E01               	movlw	1
   611  000928  1A09               	xorwf	___awdiv@sign^0,f,c
   612  00092A                     l1096:
   613  00092A  0E00               	movlw	0
   614  00092C  6E0B               	movwf	(___awdiv@quotient+1)^0,c
   615  00092E  0E00               	movlw	0
   616  000930  6E0A               	movwf	___awdiv@quotient^0,c
   617  000932  5006               	movf	___awdiv@divisor^0,w,c
   618  000934  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
   619  000936  B4D8               	btfsc	status,2,c
   620  000938  EFA0  F004         	goto	u381
   621  00093C  EFA2  F004         	goto	u380
   622  000940                     u381:
   623  000940  EFCA  F004         	goto	l1118
   624  000944                     u380:
   625  000944  0E01               	movlw	1
   626  000946  6E08               	movwf	___awdiv@counter^0,c
   627  000948  EFAA  F004         	goto	l1104
   628  00094C                     l1102:
   629  00094C  90D8               	bcf	status,0,c
   630  00094E  3606               	rlcf	___awdiv@divisor^0,f,c
   631  000950  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
   632  000952  2A08               	incf	___awdiv@counter^0,f,c
   633  000954                     l1104:
   634  000954  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
   635  000956  EFAF  F004         	goto	u391
   636  00095A  EFB1  F004         	goto	u390
   637  00095E                     u391:
   638  00095E  EFA6  F004         	goto	l1102
   639  000962                     u390:
   640  000962                     l1106:
   641  000962  90D8               	bcf	status,0,c
   642  000964  360A               	rlcf	___awdiv@quotient^0,f,c
   643  000966  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
   644  000968  5006               	movf	___awdiv@divisor^0,w,c
   645  00096A  5C04               	subwf	___awdiv@dividend^0,w,c
   646  00096C  5007               	movf	(___awdiv@divisor+1)^0,w,c
   647  00096E  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
   648  000970  A0D8               	btfss	status,0,c
   649  000972  EFBD  F004         	goto	u401
   650  000976  EFBF  F004         	goto	u400
   651  00097A                     u401:
   652  00097A  EFC4  F004         	goto	l1114
   653  00097E                     u400:
   654  00097E  5006               	movf	___awdiv@divisor^0,w,c
   655  000980  5E04               	subwf	___awdiv@dividend^0,f,c
   656  000982  5007               	movf	(___awdiv@divisor+1)^0,w,c
   657  000984  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
   658  000986  800A               	bsf	___awdiv@quotient^0,0,c
   659  000988                     l1114:
   660  000988  90D8               	bcf	status,0,c
   661  00098A  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
   662  00098C  3206               	rrcf	___awdiv@divisor^0,f,c
   663  00098E  2E08               	decfsz	___awdiv@counter^0,f,c
   664  000990  EFB1  F004         	goto	l1106
   665  000994                     l1118:
   666  000994  5009               	movf	___awdiv@sign^0,w,c
   667  000996  B4D8               	btfsc	status,2,c
   668  000998  EFD0  F004         	goto	u411
   669  00099C  EFD2  F004         	goto	u410
   670  0009A0                     u411:
   671  0009A0  EFD6  F004         	goto	l1122
   672  0009A4                     u410:
   673  0009A4  6C0A               	negf	___awdiv@quotient^0,c
   674  0009A6  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
   675  0009A8  B0D8               	btfsc	status,0,c
   676  0009AA  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
   677  0009AC                     l1122:
   678  0009AC  C00A  F004         	movff	___awdiv@quotient,?___awdiv
   679  0009B0  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
   680  0009B4  0012               	return		;funcret
   681  0009B6                     __end_of___awdiv:
   682                           	opt callstack 0
   683                           
   684 ;; *************** function _StringLCD *****************
   685 ;; Defined at:
   686 ;;		line 104 in file "./lcd_4vias.h"
   687 ;; Parameters:    Size  Location     Type
   688 ;;  string          2    6[COMRAM] PTR const unsigned char 
   689 ;;		 -> STR_2(17), STR_1(17), 
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   701 ;;      Params:         2       0       0       0       0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0       0       0       0       0
   704 ;;      Totals:         2       0       0       0       0       0       0       0       0
   705 ;;Total ram usage:        2 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:    3
   708 ;; This function calls:
   709 ;;		_EscreveLCD
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text3
   716  000D0C                     __ptext3:
   717                           	opt callstack 0
   718  000D0C                     _StringLCD:
   719                           	opt callstack 27
   720  000D0C                     
   721                           ;./lcd_4vias.h: 104: void StringLCD (const unsigned char *string);./lcd_4vias.h: 105: {;
      +                          ./lcd_4vias.h: 106:     while (*string != 0)
   722  000D0C  EF92  F006         	goto	l1050
   723  000D10                     l1046:
   724                           
   725                           ;./lcd_4vias.h: 107:     {;./lcd_4vias.h: 108:         EscreveLCD (*string);
   726  000D10  C007  FFF6         	movff	StringLCD@string,tblptrl
   727  000D14  C008  FFF7         	movff	StringLCD@string+1,tblptrh
   728  000D18                     	if	0	;tblptru may be non-zero
   729  000D18                     	endif
   730  000D18                     	if	0	;tblptru may be non-zero
   731  000D18                     	endif
   732  000D18  0008               	tblrd		*
   733  000D1A  50F5               	movf	tablat,w,c
   734  000D1C  ECF3  F005         	call	_EscreveLCD
   735  000D20                     
   736                           ;./lcd_4vias.h: 109:         string++;
   737  000D20  4A07               	infsnz	StringLCD@string^0,f,c
   738  000D22  2A08               	incf	(StringLCD@string+1)^0,f,c
   739  000D24                     l1050:
   740                           
   741                           ;./lcd_4vias.h: 106:     while (*string != 0)
   742  000D24  C007  FFF6         	movff	StringLCD@string,tblptrl
   743  000D28  C008  FFF7         	movff	StringLCD@string+1,tblptrh
   744  000D2C                     	if	0	;tblptru may be non-zero
   745  000D2C                     	endif
   746  000D2C                     	if	0	;tblptru may be non-zero
   747  000D2C                     	endif
   748  000D2C  0008               	tblrd		*
   749  000D2E  50F5               	movf	tablat,w,c
   750  000D30  0900               	iorlw	0
   751  000D32  A4D8               	btfss	status,2,c
   752  000D34  EF9E  F006         	goto	u331
   753  000D38  EFA0  F006         	goto	u330
   754  000D3C                     u331:
   755  000D3C  EF88  F006         	goto	l1046
   756  000D40                     u330:
   757  000D40  0012               	return		;funcret
   758  000D42                     __end_of_StringLCD:
   759                           	opt callstack 0
   760                           
   761 ;; *************** function _EscreveLCD *****************
   762 ;; Defined at:
   763 ;;		line 80 in file "./lcd_4vias.h"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  dado            1    wreg     unsigned char 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  dado            1    4[COMRAM] unsigned char 
   768 ;;  i               1    5[COMRAM] unsigned char 
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, status,2, status,0
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   778 ;;      Params:         0       0       0       0       0       0       0       0       0
   779 ;;      Locals:         2       0       0       0       0       0       0       0       0
   780 ;;      Temps:          1       0       0       0       0       0       0       0       0
   781 ;;      Totals:         3       0       0       0       0       0       0       0       0
   782 ;;Total ram usage:        3 bytes
   783 ;; Hardware stack levels used:    1
   784 ;; Hardware stack levels required when called:    2
   785 ;; This function calls:
   786 ;;		Nothing
   787 ;; This function is called by:
   788 ;;		_StringLCD
   789 ;;		_main
   790 ;;		_NumeroLCD
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           	psect	text4
   795  000BE6                     __ptext4:
   796                           	opt callstack 0
   797  000BE6                     _EscreveLCD:
   798                           	opt callstack 27
   799                           
   800                           ;incstack = 0
   801                           ;EscreveLCD@dado stored from wreg
   802  000BE6  6E05               	movwf	EscreveLCD@dado^0,c
   803  000BE8                     
   804                           ;./lcd_4vias.h: 80: void EscreveLCD (unsigned char dado);./lcd_4vias.h: 81: {;./lcd_4via
      +                          s.h: 82:     unsigned char i;;./lcd_4vias.h: 84:     for (i = 0; i < 2; i++)
   805  000BE8  0E00               	movlw	0
   806  000BEA  6E06               	movwf	EscreveLCD@i^0,c
   807  000BEC                     l806:
   808                           
   809                           ;./lcd_4vias.h: 85:     {;./lcd_4vias.h: 86:         if (i) PORTB = ((PORTB & 0B00001111
      +                          ) | (dado <<4));
   810  000BEC  5006               	movf	EscreveLCD@i^0,w,c
   811  000BEE  B4D8               	btfsc	status,2,c
   812  000BF0  EFFC  F005         	goto	u51
   813  000BF4  EFFE  F005         	goto	u50
   814  000BF8                     u51:
   815  000BF8  EF09  F006         	goto	l810
   816  000BFC                     u50:
   817  000BFC  C005  F004         	movff	EscreveLCD@dado,??_EscreveLCD
   818  000C00  3A04               	swapf	??_EscreveLCD^0,f,c
   819  000C02  0EF0               	movlw	240
   820  000C04  1604               	andwf	??_EscreveLCD^0,f,c
   821  000C06  5081               	movf	129,w,c	;volatile
   822  000C08  0B0F               	andlw	15
   823  000C0A  1004               	iorwf	??_EscreveLCD^0,w,c
   824  000C0C  6E81               	movwf	129,c	;volatile
   825  000C0E  EF0D  F006         	goto	l812
   826  000C12                     l810:
   827  000C12  5081               	movf	129,w,c	;volatile
   828  000C14  0B0F               	andlw	15
   829  000C16  1005               	iorwf	EscreveLCD@dado^0,w,c
   830  000C18  6E81               	movwf	129,c	;volatile
   831  000C1A                     l812:
   832                           
   833                           ;./lcd_4vias.h: 89:         PORTBbits.RB2 = 1;
   834  000C1A  8481               	bsf	129,2,c	;volatile
   835  000C1C                     
   836                           ;./lcd_4vias.h: 90:         PORTBbits.RB3 = 1;
   837  000C1C  8681               	bsf	129,3,c	;volatile
   838  000C1E                     
   839                           ;./lcd_4vias.h: 91:         _delay((unsigned long)((50)*(4000000/4000000.0)));
   840  000C1E  0E10               	movlw	16
   841  000C20                     u537:
   842  000C20  2EE8               	decfsz	wreg,f,c
   843  000C22  D7FE               	bra	u537
   844  000C24  D000               	nop2	
   845  000C26                     
   846                           ;./lcd_4vias.h: 93:         PORTBbits.RB3 = 0;
   847  000C26  9681               	bcf	129,3,c	;volatile
   848                           
   849                           ;./lcd_4vias.h: 94:     }
   850  000C28  2A06               	incf	EscreveLCD@i^0,f,c
   851  000C2A  0E01               	movlw	1
   852  000C2C  6406               	cpfsgt	EscreveLCD@i^0,c
   853  000C2E  EF1B  F006         	goto	u61
   854  000C32  EF1D  F006         	goto	u60
   855  000C36                     u61:
   856  000C36  EFF6  F005         	goto	l806
   857  000C3A                     u60:
   858  000C3A                     
   859                           ;./lcd_4vias.h: 96:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   860  000C3A  0E10               	movlw	16
   861  000C3C                     u547:
   862  000C3C  2EE8               	decfsz	wreg,f,c
   863  000C3E  D7FE               	bra	u547
   864  000C40  D000               	nop2	
   865  000C42  0012               	return		;funcret
   866  000C44                     __end_of_EscreveLCD:
   867                           	opt callstack 0
   868                           
   869 ;; *************** function _PosicionaLCD *****************
   870 ;; Defined at:
   871 ;;		line 153 in file "./lcd_4vias.h"
   872 ;; Parameters:    Size  Location     Type
   873 ;;  linha           1    wreg     unsigned char 
   874 ;;  coluna          1    6[COMRAM] unsigned char 
   875 ;; Auto vars:     Size  Location     Type
   876 ;;  linha           1    9[COMRAM] unsigned char 
   877 ;;  posicao         1   10[COMRAM] unsigned char 
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, status,2, status,0, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   887 ;;      Params:         1       0       0       0       0       0       0       0       0
   888 ;;      Locals:         2       0       0       0       0       0       0       0       0
   889 ;;      Temps:          2       0       0       0       0       0       0       0       0
   890 ;;      Totals:         5       0       0       0       0       0       0       0       0
   891 ;;Total ram usage:        5 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    3
   894 ;; This function calls:
   895 ;;		_ComandoLCD
   896 ;; This function is called by:
   897 ;;		_main
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           	psect	text5
   902  000B74                     __ptext5:
   903                           	opt callstack 0
   904  000B74                     _PosicionaLCD:
   905                           	opt callstack 27
   906                           
   907                           ;incstack = 0
   908                           ;PosicionaLCD@linha stored from wreg
   909  000B74  6E0A               	movwf	PosicionaLCD@linha^0,c
   910  000B76                     
   911                           ;./lcd_4vias.h: 153: void PosicionaLCD (unsigned char linha, unsigned char coluna);./lcd
      +                          _4vias.h: 154: {;./lcd_4vias.h: 155:     unsigned char posicao;;./lcd_4vias.h: 156:     
      +                          coluna--;
   912  000B76  0607               	decf	PosicionaLCD@coluna^0,f,c
   913                           
   914                           ;./lcd_4vias.h: 158:     switch (linha)
   915  000B78  EFD2  F005         	goto	l1064
   916  000B7C                     l1054:
   917  000B7C  5007               	movf	PosicionaLCD@coluna^0,w,c
   918  000B7E  0F80               	addlw	128
   919  000B80  6E0B               	movwf	PosicionaLCD@posicao^0,c
   920  000B82  EFEF  F005         	goto	l1066
   921  000B86                     l1056:
   922  000B86  5007               	movf	PosicionaLCD@coluna^0,w,c
   923  000B88  0FC0               	addlw	192
   924  000B8A  6E0B               	movwf	PosicionaLCD@posicao^0,c
   925  000B8C  EFEF  F005         	goto	l1066
   926  000B90                     l1058:
   927  000B90  5007               	movf	PosicionaLCD@coluna^0,w,c
   928  000B92  0F94               	addlw	148
   929  000B94  6E0B               	movwf	PosicionaLCD@posicao^0,c
   930  000B96  EFEF  F005         	goto	l1066
   931  000B9A                     l1060:
   932  000B9A  5007               	movf	PosicionaLCD@coluna^0,w,c
   933  000B9C  0FD4               	addlw	212
   934  000B9E  6E0B               	movwf	PosicionaLCD@posicao^0,c
   935  000BA0  EFEF  F005         	goto	l1066
   936  000BA4                     l1064:
   937  000BA4  500A               	movf	PosicionaLCD@linha^0,w,c
   938  000BA6  6E08               	movwf	??_PosicionaLCD^0,c
   939  000BA8  6A09               	clrf	(??_PosicionaLCD+1)^0,c
   940                           
   941                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   942                           ; Switch size 1, requested type "simple"
   943                           ; Number of cases is 1, Range of values is 0 to 0
   944                           ; switch strategies available:
   945                           ; Name         Instructions Cycles
   946                           ; simple_byte            4     3 (average)
   947                           ;	Chosen strategy is simple_byte
   948  000BAA  5009               	movf	(??_PosicionaLCD+1)^0,w,c
   949  000BAC  0A00               	xorlw	0	; case 0
   950  000BAE  B4D8               	btfsc	status,2,c
   951  000BB0  EFDC  F005         	goto	l1214
   952  000BB4  EFEF  F005         	goto	l1066
   953  000BB8                     l1214:
   954                           
   955                           ; Switch size 1, requested type "simple"
   956                           ; Number of cases is 4, Range of values is 1 to 4
   957                           ; switch strategies available:
   958                           ; Name         Instructions Cycles
   959                           ; simple_byte           13     7 (average)
   960                           ;	Chosen strategy is simple_byte
   961  000BB8  5008               	movf	??_PosicionaLCD^0,w,c
   962  000BBA  0A01               	xorlw	1	; case 1
   963  000BBC  B4D8               	btfsc	status,2,c
   964  000BBE  EFBE  F005         	goto	l1054
   965  000BC2  0A03               	xorlw	3	; case 2
   966  000BC4  B4D8               	btfsc	status,2,c
   967  000BC6  EFC3  F005         	goto	l1056
   968  000BCA  0A01               	xorlw	1	; case 3
   969  000BCC  B4D8               	btfsc	status,2,c
   970  000BCE  EFC8  F005         	goto	l1058
   971  000BD2  0A07               	xorlw	7	; case 4
   972  000BD4  B4D8               	btfsc	status,2,c
   973  000BD6  EFCD  F005         	goto	l1060
   974  000BDA  EFEF  F005         	goto	l1066
   975  000BDE                     l1066:
   976                           
   977                           ;./lcd_4vias.h: 166:     ComandoLCD (posicao);
   978  000BDE  500B               	movf	PosicionaLCD@posicao^0,w,c
   979  000BE0  EC33  F005         	call	_ComandoLCD
   980  000BE4  0012               	return		;funcret
   981  000BE6                     __end_of_PosicionaLCD:
   982                           	opt callstack 0
   983                           
   984 ;; *************** function _IntExterna *****************
   985 ;; Defined at:
   986 ;;		line 21 in file "./intext.h"
   987 ;; Parameters:    Size  Location     Type
   988 ;;  opcao           2    3[COMRAM] int 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, status,2, status,0
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1000 ;;      Params:         2       0       0       0       0       0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1003 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1004 ;;Total ram usage:        2 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    2
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_main
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text6
  1015  000C98                     __ptext6:
  1016                           	opt callstack 0
  1017  000C98                     _IntExterna:
  1018                           	opt callstack 28
  1019  000C98                     
  1020                           ;./intext.h: 22:  TRISBbits.TRISB0 = 1;
  1021  000C98  8093               	bsf	147,0,c	;volatile
  1022                           
  1023                           ;./intext.h: 24:  INTCON2bits.INTEDG0 = 1;
  1024  000C9A  8CF1               	bsf	241,6,c	;volatile
  1025                           
  1026                           ;./intext.h: 27:  RCONbits.IPEN = 1;
  1027  000C9C  8ED0               	bsf	208,7,c	;volatile
  1028  000C9E                     
  1029                           ;./intext.h: 30:  if(opcao == 1){
  1030  000C9E  0404               	decf	IntExterna@opcao^0,w,c
  1031  000CA0  1005               	iorwf	(IntExterna@opcao+1)^0,w,c
  1032  000CA2  A4D8               	btfss	status,2,c
  1033  000CA4  EF56  F006         	goto	u341
  1034  000CA8  EF58  F006         	goto	u340
  1035  000CAC                     u341:
  1036  000CAC  EF5D  F006         	goto	l1078
  1037  000CB0                     u340:
  1038  000CB0                     
  1039                           ;./intext.h: 32:   INTCONbits.INT0IE = 1;
  1040  000CB0  88F2               	bsf	242,4,c	;volatile
  1041                           
  1042                           ;./intext.h: 33:   INTCONbits.GIEH = 1;
  1043  000CB2  8EF2               	bsf	242,7,c	;volatile
  1044                           
  1045                           ;./intext.h: 35:   INTCONbits.INT0F = 0;
  1046  000CB4  92F2               	bcf	242,1,c	;volatile
  1047                           
  1048                           ;./intext.h: 36:  }
  1049  000CB6  EF68  F006         	goto	l74
  1050  000CBA                     l1078:
  1051  000CBA  5004               	movf	IntExterna@opcao^0,w,c
  1052  000CBC  1005               	iorwf	(IntExterna@opcao+1)^0,w,c
  1053  000CBE  A4D8               	btfss	status,2,c
  1054  000CC0  EF64  F006         	goto	u351
  1055  000CC4  EF66  F006         	goto	u350
  1056  000CC8                     u351:
  1057  000CC8  EF68  F006         	goto	l74
  1058  000CCC                     u350:
  1059  000CCC                     
  1060                           ;./intext.h: 38:   INTCONbits.INT0IE = 0;
  1061  000CCC  98F2               	bcf	242,4,c	;volatile
  1062                           
  1063                           ;./intext.h: 39:   INTCONbits.GIEH = 0;
  1064  000CCE  9EF2               	bcf	242,7,c	;volatile
  1065  000CD0                     l74:
  1066  000CD0  0012               	return		;funcret
  1067  000CD2                     __end_of_IntExterna:
  1068                           	opt callstack 0
  1069                           
  1070 ;; *************** function _IniciaLCD *****************
  1071 ;; Defined at:
  1072 ;;		line 38 in file "./lcd_4vias.h"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  inicio          6    7[COMRAM] unsigned char [6]
  1077 ;;  i               1   13[COMRAM] unsigned char 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1087 ;;      Params:         0       0       0       0       0       0       0       0       0
  1088 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1089 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1090 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1091 ;;Total ram usage:        8 bytes
  1092 ;; Hardware stack levels used:    1
  1093 ;; Hardware stack levels required when called:    3
  1094 ;; This function calls:
  1095 ;;		_ComandoLCD
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text7
  1102  000C44                     __ptext7:
  1103                           	opt callstack 0
  1104  000C44                     _IniciaLCD:
  1105                           	opt callstack 27
  1106  000C44                     
  1107                           ;./lcd_4vias.h: 40:     unsigned char i;;./lcd_4vias.h: 41:     unsigned char inicio[6] 
      +                          = {0x33, 0x32, 0x28, 0x0C, 0x06, 0x01};
  1108  000C44  EE20  F012         	lfsr	2,IniciaLCD@F3175
  1109  000C48  EE10  F008         	lfsr	1,IniciaLCD@inicio
  1110  000C4C  0E05               	movlw	5
  1111  000C4E                     u71:
  1112  000C4E  CFDB FFE3          	movff	plusw2,plusw1
  1113  000C52  06E8               	decf	wreg,f,c
  1114  000C54  E2FC               	bc	u71
  1115  000C56                     
  1116                           ;./lcd_4vias.h: 43:     PORTB = PORTB & 0B00001111;
  1117  000C56  5081               	movf	129,w,c	;volatile
  1118  000C58  0B0F               	andlw	15
  1119  000C5A  6E81               	movwf	129,c	;volatile
  1120  000C5C                     
  1121                           ;./lcd_4vias.h: 44:     PORTBbits.RB2 = 0;
  1122  000C5C  9481               	bcf	129,2,c	;volatile
  1123  000C5E                     
  1124                           ;./lcd_4vias.h: 45:     PORTBbits.RB3 = 0;
  1125  000C5E  9681               	bcf	129,3,c	;volatile
  1126  000C60                     
  1127                           ;./lcd_4vias.h: 47:     _delay((unsigned long)((15)*(4000000/4000.0)));
  1128  000C60  0E14               	movlw	20
  1129  000C62  6E07               	movwf	??_IniciaLCD^0,c
  1130  000C64  0E7A               	movlw	122
  1131  000C66                     u557:
  1132  000C66  2EE8               	decfsz	wreg,f,c
  1133  000C68  D7FE               	bra	u557
  1134  000C6A  2E07               	decfsz	??_IniciaLCD^0,f,c
  1135  000C6C  D7FC               	bra	u557
  1136  000C6E                     
  1137                           ;./lcd_4vias.h: 50:     for (i = 0; i < 6; i++) ComandoLCD (inicio[i]);
  1138  000C6E  0E00               	movlw	0
  1139  000C70  6E0E               	movwf	IniciaLCD@i^0,c
  1140  000C72                     l840:
  1141  000C72  0E08               	movlw	low IniciaLCD@inicio
  1142  000C74  240E               	addwf	IniciaLCD@i^0,w,c
  1143  000C76  6ED9               	movwf	fsr2l,c
  1144  000C78  6ADA               	clrf	fsr2h,c
  1145  000C7A  0E00               	movlw	high IniciaLCD@inicio
  1146  000C7C  22DA               	addwfc	fsr2h,f,c
  1147  000C7E  50DF               	movf	indf2,w,c
  1148  000C80  EC33  F005         	call	_ComandoLCD
  1149  000C84  2A0E               	incf	IniciaLCD@i^0,f,c
  1150  000C86  0E05               	movlw	5
  1151  000C88  640E               	cpfsgt	IniciaLCD@i^0,c
  1152  000C8A  EF49  F006         	goto	u81
  1153  000C8E  EF4B  F006         	goto	u80
  1154  000C92                     u81:
  1155  000C92  EF39  F006         	goto	l840
  1156  000C96                     u80:
  1157  000C96  0012               	return		;funcret
  1158  000C98                     __end_of_IniciaLCD:
  1159                           	opt callstack 0
  1160                           
  1161 ;; *************** function _ComandoLCD *****************
  1162 ;; Defined at:
  1163 ;;		line 56 in file "./lcd_4vias.h"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;  dado            1    wreg     unsigned char 
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;  dado            1    5[COMRAM] unsigned char 
  1168 ;;  i               1    4[COMRAM] unsigned char 
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, status,2, status,0
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1178 ;;      Params:         0       0       0       0       0       0       0       0       0
  1179 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1180 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1181 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1182 ;;Total ram usage:        3 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; Hardware stack levels required when called:    2
  1185 ;; This function calls:
  1186 ;;		Nothing
  1187 ;; This function is called by:
  1188 ;;		_IniciaLCD
  1189 ;;		_PosicionaLCD
  1190 ;;		_LimpaLCD
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	text8
  1195  000A66                     __ptext8:
  1196                           	opt callstack 0
  1197  000A66                     _ComandoLCD:
  1198                           	opt callstack 27
  1199                           
  1200                           ;incstack = 0
  1201                           ;ComandoLCD@dado stored from wreg
  1202  000A66  6E06               	movwf	ComandoLCD@dado^0,c
  1203  000A68                     
  1204                           ;./lcd_4vias.h: 56: void ComandoLCD (unsigned char dado);./lcd_4vias.h: 57: {;./lcd_4via
      +                          s.h: 58:     unsigned char i;;./lcd_4vias.h: 60:     for (i = 0; i < 2; i++)
  1205  000A68  0E00               	movlw	0
  1206  000A6A  6E05               	movwf	ComandoLCD@i^0,c
  1207  000A6C                     l776:
  1208                           
  1209                           ;./lcd_4vias.h: 61:     {;./lcd_4vias.h: 62:         if (i) PORTB = ((PORTB & 0B00001111
      +                          ) | (dado <<4));
  1210  000A6C  5005               	movf	ComandoLCD@i^0,w,c
  1211  000A6E  B4D8               	btfsc	status,2,c
  1212  000A70  EF3C  F005         	goto	u11
  1213  000A74  EF3E  F005         	goto	u10
  1214  000A78                     u11:
  1215  000A78  EF49  F005         	goto	l780
  1216  000A7C                     u10:
  1217  000A7C  C006  F004         	movff	ComandoLCD@dado,??_ComandoLCD
  1218  000A80  3A04               	swapf	??_ComandoLCD^0,f,c
  1219  000A82  0EF0               	movlw	240
  1220  000A84  1604               	andwf	??_ComandoLCD^0,f,c
  1221  000A86  5081               	movf	129,w,c	;volatile
  1222  000A88  0B0F               	andlw	15
  1223  000A8A  1004               	iorwf	??_ComandoLCD^0,w,c
  1224  000A8C  6E81               	movwf	129,c	;volatile
  1225  000A8E  EF4D  F005         	goto	l782
  1226  000A92                     l780:
  1227  000A92  5081               	movf	129,w,c	;volatile
  1228  000A94  0B0F               	andlw	15
  1229  000A96  1006               	iorwf	ComandoLCD@dado^0,w,c
  1230  000A98  6E81               	movwf	129,c	;volatile
  1231  000A9A                     l782:
  1232                           
  1233                           ;./lcd_4vias.h: 65:         PORTBbits.RB2 = 0;
  1234  000A9A  9481               	bcf	129,2,c	;volatile
  1235  000A9C                     
  1236                           ;./lcd_4vias.h: 66:         PORTBbits.RB3 = 1;
  1237  000A9C  8681               	bsf	129,3,c	;volatile
  1238  000A9E                     
  1239                           ;./lcd_4vias.h: 67:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  1240  000A9E  0E10               	movlw	16
  1241  000AA0                     u567:
  1242  000AA0  2EE8               	decfsz	wreg,f,c
  1243  000AA2  D7FE               	bra	u567
  1244  000AA4  D000               	nop2	
  1245  000AA6                     
  1246                           ;./lcd_4vias.h: 69:         PORTBbits.RB3 = 0;
  1247  000AA6  9681               	bcf	129,3,c	;volatile
  1248                           
  1249                           ;./lcd_4vias.h: 70:     }
  1250  000AA8  2A05               	incf	ComandoLCD@i^0,f,c
  1251  000AAA  0E01               	movlw	1
  1252  000AAC  6405               	cpfsgt	ComandoLCD@i^0,c
  1253  000AAE  EF5B  F005         	goto	u21
  1254  000AB2  EF5D  F005         	goto	u20
  1255  000AB6                     u21:
  1256  000AB6  EF36  F005         	goto	l776
  1257  000ABA                     u20:
  1258  000ABA                     
  1259                           ;./lcd_4vias.h: 72:     if ((dado == 0x01) || (dado == 0x02)) _delay((unsigned long)((2)
      +                          *(4000000/4000.0)));
  1260  000ABA  0406               	decf	ComandoLCD@dado^0,w,c
  1261  000ABC  B4D8               	btfsc	status,2,c
  1262  000ABE  EF63  F005         	goto	u31
  1263  000AC2  EF65  F005         	goto	u30
  1264  000AC6                     u31:
  1265  000AC6  EF6E  F005         	goto	l796
  1266  000ACA                     u30:
  1267  000ACA  0E02               	movlw	2
  1268  000ACC  1806               	xorwf	ComandoLCD@dado^0,w,c
  1269  000ACE  A4D8               	btfss	status,2,c
  1270  000AD0  EF6C  F005         	goto	u41
  1271  000AD4  EF6E  F005         	goto	u40
  1272  000AD8                     u41:
  1273  000AD8  EF77  F005         	goto	l798
  1274  000ADC                     u40:
  1275  000ADC                     l796:
  1276  000ADC  0E03               	movlw	3
  1277  000ADE  6E04               	movwf	??_ComandoLCD^0,c
  1278  000AE0  0E98               	movlw	152
  1279  000AE2                     u577:
  1280  000AE2  2EE8               	decfsz	wreg,f,c
  1281  000AE4  D7FE               	bra	u577
  1282  000AE6  2E04               	decfsz	??_ComandoLCD^0,f,c
  1283  000AE8  D7FC               	bra	u577
  1284  000AEA  EF7B  F005         	goto	l36
  1285  000AEE                     l798:
  1286  000AEE  0E10               	movlw	16
  1287  000AF0                     u587:
  1288  000AF0  2EE8               	decfsz	wreg,f,c
  1289  000AF2  D7FE               	bra	u587
  1290  000AF4  D000               	nop2	
  1291  000AF6                     l36:
  1292  000AF6  0012               	return		;funcret
  1293  000AF8                     __end_of_ComandoLCD:
  1294                           	opt callstack 0
  1295                           
  1296 ;; *************** function _high_isr *****************
  1297 ;; Defined at:
  1298 ;;		line 59 in file "main.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1312 ;;      Params:         0       0       0       0       0       0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1314 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1315 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1316 ;;Total ram usage:        1 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    1
  1319 ;; This function calls:
  1320 ;;		i2_IntExterna
  1321 ;; This function is called by:
  1322 ;;		Interrupt level 2
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	intcode
  1327  000008                     __pintcode:
  1328                           	opt callstack 0
  1329  000008                     _high_isr:
  1330                           	opt callstack 27
  1331                           
  1332                           ;incstack = 0
  1333  000008  821A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1334  00000A  ED7C  F005         	call	int_func,f	;refresh shadow registers
  1335                           
  1336                           	psect	intcode_body
  1337  000AF8                     __pintcode_body:
  1338                           	opt callstack 27
  1339  000AF8                     int_func:
  1340                           	opt callstack 27
  1341  000AF8  0006               	pop		; remove dummy address from shadow register refresh
  1342  000AFA                     
  1343                           ;main.c: 60:  if(INTCONbits.INT0IF){
  1344  000AFA  A2F2               	btfss	242,1,c	;volatile
  1345  000AFC  EF82  F005         	goto	i2u50_41
  1346  000B00  EF84  F005         	goto	i2u50_40
  1347  000B04                     i2u50_41:
  1348  000B04  EFB2  F005         	goto	i2l1186
  1349  000B08                     i2u50_40:
  1350  000B08                     
  1351                           ;main.c: 61:   INTCONbits.INT0IF = 0;
  1352  000B08  92F2               	bcf	242,1,c	;volatile
  1353  000B0A                     
  1354                           ;main.c: 62:   IntExterna(0);
  1355  000B0A  0E00               	movlw	0
  1356  000B0C  6E02               	movwf	(i2IntExterna@opcao+1)^0,c
  1357  000B0E  0E00               	movlw	0
  1358  000B10  6E01               	movwf	i2IntExterna@opcao^0,c
  1359  000B12  EC69  F006         	call	i2_IntExterna	;wreg free
  1360  000B16                     
  1361                           ;main.c: 63:         _delay((unsigned long)((30)*(4000000/4000.0)));
  1362  000B16  0E27               	movlw	39
  1363  000B18  6E03               	movwf	??_high_isr^0,c
  1364  000B1A  0EF5               	movlw	245
  1365  000B1C                     i2u59_47:
  1366  000B1C  2EE8               	decfsz	wreg,f,c
  1367  000B1E  D7FE               	bra	i2u59_47
  1368  000B20  2E03               	decfsz	??_high_isr^0,f,c
  1369  000B22  D7FC               	bra	i2u59_47
  1370  000B24  F000               	nop	
  1371  000B26                     i2l82:
  1372  000B26  B081               	btfsc	129,0,c	;volatile
  1373  000B28  EF98  F005         	goto	i2u51_41
  1374  000B2C  EF9A  F005         	goto	i2u51_40
  1375  000B30                     i2u51_41:
  1376  000B30  EF93  F005         	goto	i2l82
  1377  000B34                     i2u51_40:
  1378  000B34                     
  1379                           ;main.c: 65:         _delay((unsigned long)((30)*(4000000/4000.0)));
  1380  000B34  0E27               	movlw	39
  1381  000B36  6E03               	movwf	??_high_isr^0,c
  1382  000B38  0EF5               	movlw	245
  1383  000B3A                     i2u60_47:
  1384  000B3A  2EE8               	decfsz	wreg,f,c
  1385  000B3C  D7FE               	bra	i2u60_47
  1386  000B3E  2E03               	decfsz	??_high_isr^0,f,c
  1387  000B40  D7FC               	bra	i2u60_47
  1388  000B42  F000               	nop	
  1389  000B44                     
  1390                           ;main.c: 67:   Conta++;
  1391  000B44  4A18               	infsnz	_Conta^0,f,c
  1392  000B46  2A19               	incf	(_Conta+1)^0,f,c
  1393                           
  1394                           ;main.c: 68:   if(Conta == 100){
  1395  000B48  0E64               	movlw	100
  1396  000B4A  1818               	xorwf	_Conta^0,w,c
  1397  000B4C  1019               	iorwf	(_Conta+1)^0,w,c
  1398  000B4E  A4D8               	btfss	status,2,c
  1399  000B50  EFAC  F005         	goto	i2u52_41
  1400  000B54  EFAE  F005         	goto	i2u52_40
  1401  000B58                     i2u52_41:
  1402  000B58  EFB2  F005         	goto	i2l1186
  1403  000B5C                     i2u52_40:
  1404  000B5C                     
  1405                           ;main.c: 69:             Conta = 0;
  1406  000B5C  0E00               	movlw	0
  1407  000B5E  6E19               	movwf	(_Conta+1)^0,c
  1408  000B60  0E00               	movlw	0
  1409  000B62  6E18               	movwf	_Conta^0,c
  1410  000B64                     i2l1186:
  1411                           
  1412                           ;main.c: 72:     IntExterna(1);
  1413  000B64  0E00               	movlw	0
  1414  000B66  6E02               	movwf	(i2IntExterna@opcao+1)^0,c
  1415  000B68  0E01               	movlw	1
  1416  000B6A  6E01               	movwf	i2IntExterna@opcao^0,c
  1417  000B6C  EC69  F006         	call	i2_IntExterna	;wreg free
  1418  000B70  921A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1419  000B72  0011               	retfie		f
  1420  000B74                     __end_of_high_isr:
  1421                           	opt callstack 0
  1422                           
  1423 ;; *************** function i2_IntExterna *****************
  1424 ;; Defined at:
  1425 ;;		line 21 in file "./intext.h"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  opcao           2    0[COMRAM] int 
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		wreg, status,2, status,0
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1439 ;;      Params:         2       0       0       0       0       0       0       0       0
  1440 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1442 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1443 ;;Total ram usage:        2 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		_high_isr
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text10
  1453  000CD2                     __ptext10:
  1454                           	opt callstack 0
  1455  000CD2                     i2_IntExterna:
  1456                           	opt callstack 27
  1457  000CD2                     
  1458                           ;./intext.h: 22:  TRISBbits.TRISB0 = 1;
  1459  000CD2  8093               	bsf	147,0,c	;volatile
  1460                           
  1461                           ;./intext.h: 24:  INTCON2bits.INTEDG0 = 1;
  1462  000CD4  8CF1               	bsf	241,6,c	;volatile
  1463                           
  1464                           ;./intext.h: 27:  RCONbits.IPEN = 1;
  1465  000CD6  8ED0               	bsf	208,7,c	;volatile
  1466  000CD8                     
  1467                           ;./intext.h: 30:  if(opcao == 1){
  1468  000CD8  0401               	decf	i2IntExterna@opcao^0,w,c
  1469  000CDA  1002               	iorwf	(i2IntExterna@opcao+1)^0,w,c
  1470  000CDC  A4D8               	btfss	status,2,c
  1471  000CDE  EF73  F006         	goto	i2u48_41
  1472  000CE2  EF75  F006         	goto	i2u48_40
  1473  000CE6                     i2u48_41:
  1474  000CE6  EF7A  F006         	goto	i2l1168
  1475  000CEA                     i2u48_40:
  1476  000CEA                     
  1477                           ;./intext.h: 32:   INTCONbits.INT0IE = 1;
  1478  000CEA  88F2               	bsf	242,4,c	;volatile
  1479                           
  1480                           ;./intext.h: 33:   INTCONbits.GIEH = 1;
  1481  000CEC  8EF2               	bsf	242,7,c	;volatile
  1482                           
  1483                           ;./intext.h: 35:   INTCONbits.INT0F = 0;
  1484  000CEE  92F2               	bcf	242,1,c	;volatile
  1485                           
  1486                           ;./intext.h: 36:  }
  1487  000CF0  EF85  F006         	goto	i2l74
  1488  000CF4                     i2l1168:
  1489  000CF4  5001               	movf	i2IntExterna@opcao^0,w,c
  1490  000CF6  1002               	iorwf	(i2IntExterna@opcao+1)^0,w,c
  1491  000CF8  A4D8               	btfss	status,2,c
  1492  000CFA  EF81  F006         	goto	i2u49_41
  1493  000CFE  EF83  F006         	goto	i2u49_40
  1494  000D02                     i2u49_41:
  1495  000D02  EF85  F006         	goto	i2l74
  1496  000D06                     i2u49_40:
  1497  000D06                     
  1498                           ;./intext.h: 38:   INTCONbits.INT0IE = 0;
  1499  000D06  98F2               	bcf	242,4,c	;volatile
  1500                           
  1501                           ;./intext.h: 39:   INTCONbits.GIEH = 0;
  1502  000D08  9EF2               	bcf	242,7,c	;volatile
  1503  000D0A                     i2l74:
  1504  000D0A  0012               	return		;funcret
  1505  000D0C                     __end_ofi2_IntExterna:
  1506                           	opt callstack 0
  1507                           
  1508                           	psect	rparam
  1509  0000                     
  1510                           	psect	temp
  1511  00001A                     btemp:
  1512                           	opt callstack 0
  1513  00001A                     	ds	1
  1514  0000                     int$flags	set	btemp
  1515  0000                     wtemp8	set	btemp+1
  1516  0000                     ttemp5	set	btemp+1
  1517  0000                     ttemp6	set	btemp+4
  1518  0000                     ttemp7	set	btemp+8
  1519                           tosu	equ	0xFFF
  1520                           tosh	equ	0xFFE
  1521                           tosl	equ	0xFFD
  1522                           stkptr	equ	0xFFC
  1523                           pclatu	equ	0xFFB
  1524                           pclath	equ	0xFFA
  1525                           pcl	equ	0xFF9
  1526                           tblptru	equ	0xFF8
  1527                           tblptrh	equ	0xFF7
  1528                           tblptrl	equ	0xFF6
  1529                           tablat	equ	0xFF5
  1530                           prodh	equ	0xFF4
  1531                           prodl	equ	0xFF3
  1532                           indf0	equ	0xFEF
  1533                           postinc0	equ	0xFEE
  1534                           postdec0	equ	0xFED
  1535                           preinc0	equ	0xFEC
  1536                           plusw0	equ	0xFEB
  1537                           fsr0h	equ	0xFEA
  1538                           fsr0l	equ	0xFE9
  1539                           wreg	equ	0xFE8
  1540                           indf1	equ	0xFE7
  1541                           postinc1	equ	0xFE6
  1542                           postdec1	equ	0xFE5
  1543                           preinc1	equ	0xFE4
  1544                           plusw1	equ	0xFE3
  1545                           fsr1h	equ	0xFE2
  1546                           fsr1l	equ	0xFE1
  1547                           bsr	equ	0xFE0
  1548                           indf2	equ	0xFDF
  1549                           postinc2	equ	0xFDE
  1550                           postdec2	equ	0xFDD
  1551                           preinc2	equ	0xFDC
  1552                           plusw2	equ	0xFDB
  1553                           fsr2h	equ	0xFDA
  1554                           fsr2l	equ	0xFD9
  1555                           status	equ	0xFD8


Data Sizes:
    Strings     34
    Constant    0
    Data        6
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    StringLCD@string	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->___awmod
    ___awmod->___awdiv
    _StringLCD->_EscreveLCD
    _PosicionaLCD->_ComandoLCD
    _IniciaLCD->_ComandoLCD

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_IntExterna

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2558
                         _EscreveLCD
                          _IniciaLCD
                         _IntExterna
                       _PosicionaLCD
                          _StringLCD
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     752
                                             11 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     604
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _StringLCD                                            2     0      2     272
                                              6 COMRAM     2     0      2
                         _EscreveLCD
 ---------------------------------------------------------------------------------
 (2) _EscreveLCD                                           3     3      0      75
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _PosicionaLCD                                         5     4      1     470
                                              6 COMRAM     5     4      1
                         _ComandoLCD
 ---------------------------------------------------------------------------------
 (1) _IntExterna                                           2     0      2     220
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _IniciaLCD                                            8     8      0     165
                                              6 COMRAM     8     8      0
                         _ComandoLCD
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           3     3      0     105
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             1     1      0      96
                                              2 COMRAM     1     1      0
                       i2_IntExterna
 ---------------------------------------------------------------------------------
 (4) i2_IntExterna                                         2     0      2      96
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EscreveLCD
   _IniciaLCD
     _ComandoLCD
   _IntExterna
   _PosicionaLCD
     _ComandoLCD
   _StringLCD
     _EscreveLCD
   ___awdiv
   ___awmod
     ___awdiv (ARG)

 _high_isr (ROOT)
   i2_IntExterna

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      19       1       26.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      20        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jun 29 11:41:57 2020

                     l25 0C96                       l43 0C42                       l36 0AF6  
                     l65 0BE4                       l49 0D40                       l74 0CD0  
                     u10 0A7C                       u11 0A78                       u20 0ABA  
                     u21 0AB6                       u30 0ACA                       u31 0AC6  
                     u40 0ADC                       u41 0AD8                       u50 0BFC  
                     u51 0BF8                       u60 0C3A                       u61 0C36  
                     u71 0C4E                       u80 0C96                       u81 0C92  
           ___awdiv@sign 0009              __CFG_BORV$0 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l341 0A64                      l328 09B4               IniciaLCD@i 000E  
                    l800 0BE8                      l810 0C12                      l820 0C2A  
                    l812 0C1A                      l830 0C5E                      l822 0C3A  
                    l814 0C1C                      l806 0BEC                      l840 0C72  
                    l832 0C60                      l824 0C44                      l816 0C1E  
                    l808 0BFC                      l770 0A68                      l842 0C84  
                    l834 0C6E                      l826 0C56                      l818 0C26  
                    l780 0A92                      l844 0C86                      l828 0C5C  
                    l790 0AAA                      l782 0A9A                      l792 0ABA  
                    l784 0A9C                      l776 0A6C                      l794 0ACA  
                    l786 0A9E                      l778 0A7C                      l796 0ADC  
                    l788 0AA6                      l798 0AEE             __CFG_CPB$OFF 000000  
                    u400 097E                      u401 097A                      u330 0D40  
                    u410 09A4                      u331 0D3C                      u411 09A0  
                    u340 0CB0                      u420 09C8                      u341 0CAC  
                    u421 09C4                      u350 0CCC                      u430 09E2  
                    u351 0CC8                      u431 09DE                      u360 0904  
                    u440 09FC                      u361 0900                      u441 09F8  
                    u370 091E                      u450 0A1A             __CFG_CPD$OFF 000000  
                    u371 091A                      u451 0A16                      u380 0944  
                    u460 0A30                      u381 0940                      u461 0A2C  
                    u390 0962                      u470 0A54                      u391 095E  
                    u471 0A50                      u537 0C20                      u547 0C3C  
                    u557 0C66                      u567 0AA0                      u577 0AE2  
                    u587 0AF0             __CFG_BOR$OFF 000000             ___awmod@sign 0011  
                    wreg 000FE8             __CFG_FOSC$HS 000000              EscreveLCD@i 0006  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     l1100 0944  
                   l1110 097E                     l1102 094C                     l1120 09A4  
                   l1112 0986                     l1104 0954                     l1200 0858  
                   l1050 0D24                     l1122 09AC                     l1114 0988  
                   l1106 0962                     l1130 09C8                     l1202 0864  
                   l1060 0B9A                     l1052 0B76                     l1044 0D0C  
                   l1116 098E                     l1108 0968                     l1140 09FC  
                   l1132 09D0                     l1204 086E                     l1214 0BB8  
                   l1054 0B7C                     l1046 0D10                     l1118 0994  
                   l1150 0A38                     l1142 0A04                     l1134 09D4  
                   l1126 09B6                     l1206 089E                     l1080 0CCC  
                   l1072 0C98                     l1056 0B86                     l1064 0BA4  
                   l1048 0D20                     l1152 0A3E                     l1144 0A0C  
                   l1136 09E2                     l1128 09BA                     l1208 08CE  
                   l1074 0C9E                     l1058 0B90                     l1066 0BDE  
                   l1090 0910                     l1082 08F2                     l1146 0A1A  
                   l1154 0A44                     l1138 09EA                     l1076 0CB0  
                   l1092 091E                     l1084 08F6                     l1156 0A54  
                   l1148 0A30                     l1078 0CBA                     l1094 0926  
                   l1086 0904                     l1158 0A5C                     l1190 0828  
                   l1096 092A                     l1088 090C                     l1192 082C  
                   l1098 0932                     l1194 0838                     l1196 0842  
                   l1188 0824                     l1198 084E                     STR_1 0812  
                   STR_2 0801                     i2l74 0D0A                     i2l82 0B26  
                   i2l86 0B70             __CFG_WDTPS$1 000000             __CFG_PWRT$ON 000000  
                   _main 0824                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 001A                     start 000E  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
        __end_of___awdiv 09B6          __end_of___awmod 0A66               _ComandoLCD 0A66  
        ___awdiv@divisor 0006          ___awdiv@counter 0008                    _PORTB 000F81  
          __CFG_USBDIV$1 000000                    _TRISB 000F93            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000                    _Conta 0018            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  tablat 000FF5               _EscreveLCD 0BE6                    plusw1 000FE3  
                  plusw2 000FDB                    ttemp5 001B                    ttemp6 001E  
                  ttemp7 0022                    status 000FD8                    wtemp8 001B  
         __CFG_ICPRT$OFF 000000               _IntExterna 0C98          __initialization 0D42  
           __end_of_main 08F2                   ??_main 0012            __activetblptr 000002  
       ___awdiv@dividend 0004       __size_of_IniciaLCD 0054                   i2l1170 0D06  
                 i2l1162 0CD2                   i2l1164 0CD8                   i2l1180 0B34  
                 i2l1172 0AFA                   i2l1166 0CEA                   i2l1182 0B44  
                 i2l1174 0B08                   i2l1168 0CF4                   i2l1184 0B5C  
                 i2l1176 0B0A                   i2l1178 0B16                   i2l1186 0B64  
      i2IntExterna@opcao 0001           __CFG_XINST$OFF 000000         __end_of_high_isr 0B74  
              ??___awdiv 0008                ??___awmod 0010         ___awdiv@quotient 000A  
        ___awmod@divisor 000E          ___awmod@counter 0010              ?_ComandoLCD 0001  
           __pdataCOMRAM 0012             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8       __size_of_StringLCD 0036  
            ?_EscreveLCD 0001               __accesstop 0060  __end_of__initialization 0D66  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001              ?_IntExterna 0004  
         __pcstackCOMRAM 0001           EscreveLCD@dado 0005        __end_of_IniciaLCD 0C98  
    __size_of_ComandoLCD 0092           IniciaLCD@F3175 0012           ComandoLCD@dado 0006  
      __end_of_StringLCD 0D42      __size_of_EscreveLCD 005E                  i2u50_40 0B08  
                i2u50_41 0B04                  i2u51_40 0B34                  i2u51_41 0B30  
                i2u52_40 0B5C                  i2u52_41 0B58                  i2u60_47 0B3A  
                i2u48_40 0CEA                  i2u48_41 0CE6                  i2u49_40 0D06  
                i2u49_41 0D02                  i2u59_47 0B1C      __size_of_IntExterna 003A  
              ?_high_isr 0001          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000            ?_PosicionaLCD 0007                  ___awdiv 08F2  
                ___awmod 09B6             __psmallconst 0800                  __pcinit 0D42  
                __ramtop 0800                  __ptext0 0824                  __ptext1 09B6  
                __ptext2 08F2                  __ptext3 0D0C                  __ptext4 0BE6  
                __ptext5 0B74                  __ptext6 0C98                  __ptext7 0C44  
                __ptext8 0A66         ___awmod@dividend 000C               ??_high_isr 0003  
         __pintcode_body 0AF8     end_of_initialization 0D66            __Lmediumconst 0000  
                int_func 0AF8           ??_PosicionaLCD 0008            ?i2_IntExterna 0001  
                postdec1 000FE5                  postinc0 000FEE                _PORTBbits 000F81  
           ??_ComandoLCD 0004                _TRISBbits 000F93          IntExterna@opcao 0004  
           ??_EscreveLCD 0004       __end_of_ComandoLCD 0AF8           ??i2_IntExterna 0003  
           ??_IntExterna 0006            __pidataCOMRAM 0D74       __end_of_EscreveLCD 0C44  
              _IniciaLCD 0C44      start_initialization 0D42       __end_of_IntExterna 0CD2  
       __CFG_LPT1OSC$OFF 000000               ?_IniciaLCD 0001              __pbssCOMRAM 0018  
              _StringLCD 0D0C     __end_of_PosicionaLCD 0BE6      PosicionaLCD@posicao 000B  
        StringLCD@string 0007        __size_of_high_isr 0B6C                __pintcode 0008  
               ?___awdiv 0004                 ?___awmod 000C              __smallconst 0800  
             ?_StringLCD 0007     __end_ofi2_IntExterna 0D0C          IniciaLCD@inicio 0008  
               _RCONbits 000FD0              ??_IniciaLCD 0007              _INTCON2bits 000FF1  
              copy_data0 0D56                 __Hrparam 0000                 __Lrparam 0000  
     PosicionaLCD@coluna 0007         __size_of___awdiv 00C4         __size_of___awmod 00B0  
  __size_of_PosicionaLCD 0072              ??_StringLCD 0009                 __ptext10 0CD2  
               _high_isr 0008            __size_of_main 00CE             _PosicionaLCD 0B74  
               int$flags 001A    __size_ofi2_IntExterna 003A    __CFG_CPUDIV$OSC1_PLL2 000000  
             _INTCONbits 000FF2        PosicionaLCD@linha 000A                 intlevel2 0000  
            ComandoLCD@i 0005             i2_IntExterna 0CD2  
